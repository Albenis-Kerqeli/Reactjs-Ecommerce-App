{"version":3,"sources":["data/ProductsData.js","assets/chocolate.webp","assets/headphones.webp","assets/macbook.webp","assets/pizza.webp","Context/StoreContext.js","styles/Header.module.css","UI/Button.js","serviceWorkerRegistration.js","components/Header.js","UI/Toast.js","App.js","index.js"],"names":["ProductsData","id","title","image","price","count","addQty","this","StoreContext","createContext","StoreProvider","props","useState","products","setProducts","carts","setCarts","orders","setOrders","value","setValue","filteredCart","filter","c","i","map","cart","indexOf","filteredcheck","check","undefined","TotalCartPrice","reduce","acc","useEffect","getCarts","JSON","parse","localStorage","getItem","setItem","stringify","getOrders","console","log","memoValue","useMemo","productctx","cartctx","filtered","total","values","checkoutsort","order","Provider","children","module","exports","Button","memo","bgColor","textColor","padding","onClick","ButtonStyle","backgroundColor","color","borderRadius","radius","fontSize","margin","display","flexDirection","direction","alignItems","justifyContent","style","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","Header","useContext","history","useHistory","className","styling","logo","to","info","e","preventDefault","alert","push","Toast","position","progressClassName","autoClose","hideProgressBar","newestOnTop","transition","Slide","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Store","lazy","Cart","Final","Checkout","App","fallback","path","exact","component","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ea3b5de6.chunk.js","sourcesContent":["import chocolate from \"../assets/chocolate.webp\";\r\nimport headphones from \"../assets/headphones.webp\";\r\nimport macbook from \"../assets/macbook.webp\";\r\nimport pizza from \"../assets/pizza.webp\";\r\nexport const ProductsData = [\r\n  {\r\n    id: 0,\r\n    title: \"Chocolate\",\r\n    image: chocolate,\r\n    price: 5,\r\n    count: 1,\r\n    addQty: function () {\r\n      return ++this.count;\r\n    }\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    title: \"Headphones\",\r\n    image: headphones,\r\n    price: 25,\r\n    count: 1,\r\n    addQty: function () {\r\n      return ++this.count;\r\n    }\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"Macbook M1\",\r\n    image:macbook,\r\n    price: 680,\r\n    count: 1,\r\n    addQty: function () {\r\n      this.count = this.count++;\r\n    }\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    title: \"Pizza\",\r\n    image:pizza,\r\n    price: 10,\r\n    count: 1,\r\n    addQty: function () {\r\n      return ++this.count;\r\n    }\r\n  }\r\n];\r\n","export default __webpack_public_path__ + \"static/media/chocolate.8753b039.webp\";","export default __webpack_public_path__ + \"static/media/headphones.54fc6de1.webp\";","export default __webpack_public_path__ + \"static/media/macbook.2339d559.webp\";","export default __webpack_public_path__ + \"static/media/pizza.6bb8a487.webp\";","import  { useState, useEffect, createContext, useMemo, memo } from \"react\";\r\nimport { ProductsData } from \"../data/ProductsData\";\r\nexport const StoreContext = createContext();\r\n\r\nconst StoreProvider = (props) => {\r\n  const [products, setProducts] = useState(ProductsData);\r\n  const [carts, setCarts] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  let [value, setValue] = useState(1);\r\n\r\n  let filteredCart = carts.filter((c, i) => {\r\n    return carts.map((cart) => cart.id).indexOf(c.id) == i;\r\n  });\r\n\r\n  let filteredcheck = orders.filter((check) => check.id !== undefined);\r\n\r\n  const TotalCartPrice = [...filteredCart].reduce((acc, cart) => {\r\n    return acc + cart.price * cart.count;\r\n  }, 0);\r\n\r\n  useEffect(() => {\r\n    const getCarts = JSON.parse(localStorage.getItem(\"CartDB\"));\r\n    if (getCarts) {\r\n      setCarts(getCarts);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"CartDB\", JSON.stringify(filteredCart));\r\n  }, [carts]);\r\n\r\n  useEffect(() => {\r\n    const getOrders = JSON.parse(localStorage.getItem(\"order\"));\r\n    if (getOrders) {\r\n      setOrders(getOrders);\r\n    } else {\r\n      console.log(\"No products in DB\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"order\", JSON.stringify(filteredcheck));\r\n  }, [orders]);\r\n  const memoValue = useMemo(\r\n    () => ({\r\n      productctx: [products, setProducts],\r\n      cartctx: [carts, setCarts],\r\n      filtered: { filteredCart },\r\n      total: { TotalCartPrice },\r\n      values: [value, setValue],\r\n      checkoutsort: { filteredcheck },\r\n      order: [orders, setOrders]\r\n    }),\r\n    [\r\n      TotalCartPrice,\r\n      filteredcheck,\r\n      filteredCart,\r\n      orders,\r\n      products,\r\n      value\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <StoreContext.Provider\r\n      value={memoValue}\r\n    >\r\n      {props.children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreProvider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__X6ISR\",\"logo\":\"Header_logo__3MJdJ\",\"info\":\"Header_info__1Sglv\"};","import {memo} from 'react';\r\nconst Button = memo(({children, bgColor, textColor , padding , onClick , radius , fontSize , margin, display, direction}) => {\r\n    const ButtonStyle = {\r\n        backgroundColor:bgColor,\r\n        color:textColor,\r\n        padding:padding,\r\n        borderRadius:radius,\r\n        fontSize:fontSize,\r\n        margin:margin,\r\n        display:display,\r\n        flexDirection:direction,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n\r\n    }\r\n    return (\r\n        <button style={ButtonStyle} onClick={onClick}>{children}</button>\r\n    )\r\n})\r\n\r\nexport default Button;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import {useContext} from \"react\";\r\nimport styling from \"../styles/Header.module.css\";\r\nimport { useHistory , Link } from \"react-router-dom\";\r\nimport {StoreContext} from '../Context/StoreContext';\r\nimport {AiOutlineShopping} from \"react-icons/ai\";\r\nimport Button from \"../UI/Button\";\r\nimport {memo} from 'react';\r\nconst Header = memo(() => {\r\n  const {cartctx} =  useContext(StoreContext);\r\n  const history = useHistory();\r\n  const [carts]  = cartctx;\r\n\r\n  const PushToCart =  (e) => {\r\n    e.preventDefault();\r\n    if(carts ==\"\") {\r\n      alert('Add a Product to the Cart');\r\n    }\r\n    else {\r\n      history.push(\"/cart\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <header  className={styling.Header}>\r\n      <div className={styling.logo}><Link to=\"/\">JoyStore</Link></div>\r\n      <div className={styling.info}>\r\n        <Button display=\"flex\" bgColor=\"var(--lightorange)\" textColor=\"white\" margin=\"5px\" radius=\"10px\" padding=\"15px 30px\" fontSize=\"15px\"  direction=\"row\"\r\n          onClick={PushToCart}\r\n        >\r\n          <h4>Shopping Cart</h4><AiOutlineShopping/>\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n});\r\nexport default Header;\r\n","import { ToastContainer, Slide } from \"react-toastify\";\r\nimport \"../styles/ToastStyling.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport {memo} from 'react';\r\n\r\nconst Toast = memo(() => {\r\n    return(\r\n        <ToastContainer\r\n        position={\"top-center\"}\r\n        progressClassName={\"toastProgress\"}\r\n        autoClose={1000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        transition={Slide}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    )\r\n})\r\nexport default Toast;","import  { lazy,Suspense } from \"react\";\r\nimport \"./GlobalStyle.css\";\r\nimport StoreProvider from \"./Context/StoreContext\";\r\nimport Header from \"./components/Header\"\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Toast from \"./UI/Toast\";\r\nconst Store = lazy(() => import( /* webpackChunkName:\"Store\" */ \"./components/Store\"));\r\nconst Cart = lazy(() => import( /* webpackChunkName:\"Cart\" */   \"./components/Cart\"));\r\n\r\nconst Final = lazy(() => import(/* webpackChunkName:\"Final\" */   \"./components/Final\"));\r\nconst Checkout = lazy(() => import( /* webpackChunkName:\"Checkout\" */  \"./components/Checkout\"));\r\nexport default function App() {\r\n  return (\r\n    <>\r\n        <Router>\r\n        <StoreProvider>\r\n\r\n          <Header />\r\n        <Suspense fallback={<h1>Loading...</h1>}>\r\n\r\n          <Switch>\r\n            <Route  path=\"/\"  exact component={Store} />\r\n            <Route path=\"/cart\" component={Cart} />\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/final\" component={Final} />\r\n          </Switch>\r\n</Suspense>\r\n    </StoreProvider>\r\n    <Toast/>\r\n    </Router>\r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}